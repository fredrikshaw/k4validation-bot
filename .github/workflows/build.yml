name: Builds

on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload images artifact
        uses: actions/upload-artifact@v4
        with:
          name: validation
          path: images/

  histcmp_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3
          python-version: 3.10
          channels: conda-forge

      - name: Install ROOT and histcmp
        shell: bash -l {0}
        run: |
          conda install -y root
          pip install histcmp==0.8.1

      - name: Test histcmp version
        shell: bash -l {0}
        run: histcmp --version

  # linux_physmon:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/acts-project/ubuntu2404:80
  #   needs: [linux_ubuntu]
  #   env:
  #     ACTS_SEQUENCER_DISABLE_FPEMON: true

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #         lfs: true

  #     - run: apt-get update && apt-get install -y time

  #     - name: Install dependencies
  #       uses: ./.github/actions/dependencies
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: acts-linux-ubuntu

  #     - name: Unpack build
  #       run: mkdir build && tar xf build.tar.gz -C build

  #     - name: Physics performance checks
  #       shell: bash
  #       run: |
  #         echo "::group::Dependencies"
  #         git config --global safe.directory "$GITHUB_WORKSPACE"
  #         python3 -m pip install histcmp==0.8.1 matplotlib
  #         python3 -m pip install -r scripts/requirements.txt
  #         geant4-config --install-datasets
  #         venv_python=$(which python3)
  #         echo $venv_python
  #         echo "Pre-setup"
  #         source build/this_acts_withdeps.sh
  #         echo "Post-setup"
  #         export PATH=$(dirname $venv_python):$PATH
  #         which python3
  #         echo $PATH
  #         echo "::endgroup::"
  #         CI/test.sh all physmon

  #     - name: Post step summary
  #       if: always()
  #       run: |
  #         mkdir -p physmon
  #         cat physmon/summary.md >> $GITHUB_STEP_SUMMARY

  #     - uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: physmon
  #         path: physmon